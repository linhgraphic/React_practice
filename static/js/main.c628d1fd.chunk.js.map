{"version":3,"sources":["logo.svg","App.jsx","serviceWorker.js","components/button.jsx","components/input.jsx","pages/Home.jsx","components/list.jsx","fixtures/index.js","components/contactCard.jsx","pages/About.jsx","pages/ContactList.jsx","index.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","className","react_router_dom","to","this","props","children","Component","Boolean","window","location","hostname","match","Button","onClick","Input","type","value","onChange","onBlur","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","increment","setState","counter","state","updateInputName","event","name","target","updateInputSurname","surName","updateInputNum","num","updateInputa","updateInputb","b","updatHhypotenuse","Math","sqrt","H","components_button","src","logo","alt","input","Array","from","length","_","i","fizzBuzz","map","elems","href","rel","contacts","email","tel","ContactCard","contact","About","ContactList","contactCard","ReactDOM","render","src_App_0","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c628d1fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Link } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/about\">about</Link>\n          <Link to=\"/contact-list\">contacts</Link>\n        </header>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\n\r\nconst Button = props => (\r\n  <button className={props.className} onClick={props.onClick}>\r\n    {props.children}\r\n  </button>\r\n);\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst Input = props => (\r\n  <input\r\n    type=\"text\"\r\n    className={props.className}\r\n    value={props.value}\r\n    onChange={props.onChange}\r\n    onBlur={props.onBlur}\r\n  />\r\n);\r\nexport default Input;\r\n","import React, { Component } from \"react\";\nimport logo from \"../logo.svg\";\nimport Button from \"../components/button\";\nimport Input from \"../components/input\";\nimport { numToArr } from \"../components/list\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      name: \"Linh\",\n      surName: \"Ng\",\n      a: 0,\n      b: 0,\n      H: 0,\n      num: 0\n    };\n  }\n  increment = () => this.setState({ counter: this.state.counter + 1 });\n  updateInputName = event => this.setState({ name: event.target.value });\n  updateInputSurname = event => this.setState({ surName: event.target.value });\n  updateInputNum = event => this.setState({ num: event.target.value });\n  // displayList = num => {\n  //   function numToArr(num) {\n  //     const arr = [];\n  //     for (let i = 1; i <= num; i++) {\n  //       i % 15 == 0\n  //         ? arr.push(\"fizzBuzz\")\n  //         : i % 3 == 0\n  //         ? arr.push(\"fizz\")\n  //         : i % 5 == 0\n  //         ? arr.push(\"buzz\")\n  //         : arr.push(i);\n  //     }\n  //     return arr;\n  //   }\n\n  //   return numToArr(num).map(elem => <li>{elem}</li>);\n  // };\n  updateInputa = event =>\n    this.setState({\n      a: event.target.value\n      // c: this.updatHhypotenuse(this.state.b, event.target.value)\n    });\n  updateInputb = event =>\n    this.setState({\n      b: event.target.value\n      // c: this.updatHhypotenuse(this.state.a, event.target.value)\n    });\n  updatHhypotenuse = (a, b) => Math.sqrt(a * a + b * b);\n  render() {\n    return (\n      <header className=\"App-header\">\n        <Button onClick={this.increment}>\n          <img src=\"https://media1.tenor.com/images/3d3f3413b6b674585fbe3335eb00af24/tenor.gif?itemid=9541076\" />{\" \"}\n        </Button>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Button className=\"btn\" />\n        <p>\n          Counter value: {this.state.counter}\n          <Input value={this.state.name} onChange={this.updateInputName} />\n          <Input\n            value={this.state.surName}\n            onChange={this.updateInputSurname}\n          />\n        </p>\n        <p>\n          <Input value={this.state.a} onChange={this.updateInputa} />\n          <Input value={this.state.b} onChange={this.updateInputb} />\n        </p>\n        <p>\n          <Input value={this.state.num} onChange={this.updateInputNum} />\n        </p>\n        <p>\n          Hello {this.state.name} {this.state.surName}\n        </p>\n        {/* <p>Hypotenuse {this.state.c}</p> */}\n        <p>Hypotenuse {this.updatHhypotenuse(this.state.a, this.state.b)}</p>\n        {/* <ol>list {this.displayList(this.state.num)}</ol> */}\n        <ol>\n          List{\" \"}\n          {numToArr(this.state.num).map(elems => (\n            <li>{elems}</li>\n          ))}\n        </ol>\n        <a\n          className=\"App-link\"\n          href=\"http://linhgraphics.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <Button>Linh</Button>\n      </header>\n    );\n  }\n}\n\nexport default Home;\n","let fizzBuzz = i =>\r\n  i % 15 === 0 ? \"fizzBuzz\" : i % 3 === 0 ? \"fizz\" : i % 5 === 0 ? \"buzz\" : i;\r\nexport const numToArr = num =>\r\n  Array.from({ length: num }, (_, i) => fizzBuzz(i + 1));\r\n","const contacts = [\r\n  { name: \"Linh\", email: \"linhgraphic@gmail.com\", tel: \"07480909333\" },\r\n  { name: \"A\", email: \"\", tel: \"\" },\r\n  { name: \"B2\", email: \"\", tel: \"\" },\r\n  { name: \"B5\", email: \"\", tel: \"\" },\r\n  { name: \"B8\", email: \"\", tel: \"\" },\r\n  { name: \"C\", email: \"\", tel: \"\" }\r\n];\r\n\r\nexport default contacts;\r\n","import React from \"react\";\r\nconst ContactCard = props => (\r\n  <ol>\r\n    <li>Name: {props.contact.name}</li>\r\n    <li>Email: {props.contact.email}</li>\r\n    <li>Tel: {props.contact.tel}</li>\r\n  </ol>\r\n);\r\n\r\nexport default ContactCard;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport contacts from \"../fixtures\";\r\nimport ContactCard from \"../components/contactCard\";\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"About\">\r\n        <div>My name is Linh</div>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport contacts from \"../fixtures\";\r\nimport ContactCard from \"../components/contactCard\";\r\n\r\nconst ContactList = () => (\r\n  <div className=\"About\">\r\n    {contacts.map(contact => (\r\n      <ContactCard contact={contact} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport ContactList from \"./pages/ContactList\";\n\nReactDOM.render(\n  <Router>\n    <App>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/contact-list\" component={ContactList} />\n      </Switch>\n    </App>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}